package org.Videos.service.bot;

import org.Videos.GamesLibrary;
import org.Videos.model.movie.Movie;
import org.Videos.service.movie.MovieService;
import org.jetbrains.annotations.NotNull;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.DeleteMessage;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageReplyMarkup;
import org.telegram.telegrambots.meta.api.objects.CallbackQuery;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboard;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardRemove;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

public class BotService {
    public int i=1;
    private static final BotService instance = new BotService();
    private final MovieService movieService = MovieService.getInstance();
    private BotService() {
    }
    public static BotService getInstance() {
        return instance;
    }
    public SendMessage welcomeBackMessage(String chatId){
        SendMessage sendMessage = new SendMessage(chatId,"Welcome back!");
        sendMessage.setReplyMarkup(starterButtons());
        return sendMessage;
    }

    public ReplyKeyboardRemove removeReplyKeyboard() {
        ReplyKeyboardRemove remove = new ReplyKeyboardRemove();
        remove.setRemoveKeyboard(true);
        return remove;
    }
    public SendMessage welcomeMessage(String chatId){
        SendMessage sendMessage = new SendMessage(chatId,"Welcome");
        sendMessage.setReplyMarkup(starterButtons());
        return sendMessage;
    }

    private ReplyKeyboard starterButtons() {
        ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();
        replyKeyboardMarkup.setResizeKeyboard(true);

        List<KeyboardRow> rows = new ArrayList<>();

        KeyboardRow row = new KeyboardRow();
        row.add("All genres");
        row.add("Categories");
        rows.add(row);

        row = new KeyboardRow();
        row.add("Search by name");
        rows.add(row);

        replyKeyboardMarkup.setKeyboard(rows);
        return replyKeyboardMarkup;
    }


    public SendMessage search(String chatId){
        SendMessage sendMessage = new SendMessage(chatId,"Enter text to search");
        sendMessage.setReplyMarkup(removeReplyKeyboard());
        return sendMessage;
    }
    public SendMessage requestContactMessage(String chatId){
        SendMessage sendMessage = new SendMessage(chatId,"Please share your numberüì≤");
        sendMessage.setReplyMarkup(requestContactButton());
        return sendMessage;
    }

    private ReplyKeyboardMarkup requestContactButton() {
        ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();
        replyKeyboardMarkup.setResizeKeyboard(true);
        replyKeyboardMarkup.setOneTimeKeyboard(true);

        KeyboardRow row = new KeyboardRow();
        KeyboardButton button = new KeyboardButton("Share phone number");
        button.setRequestContact(true);
        row.add(button);

        replyKeyboardMarkup.setKeyboard(List.of(row));
        return replyKeyboardMarkup;
    }
    public SendMessage result(String name,String chatId) {
        SendMessage sendMessage = new SendMessage(chatId,"Here are your results");
        sendMessage.setReplyMarkup(movieService.searchByNameInlineKeyboard(name));
        return sendMessage;
    }
    public SendMessage resultGenres(String genre,String chatId) {
        SendMessage sendMessage = new SendMessage(chatId,"Here are your results");
        sendMessage.setReplyMarkup(movieService.searchByGenreInlineKeyboard(genre));
        return sendMessage;
    }
    public Boolean isCommand(String command) {
        return Objects.equals(command, "/start") || Objects.equals(command, "All genres")
                || Objects.equals(command, "Categories") || Objects.equals(command, "Search by name");
    }
    public DeleteMessage handleButtonClick(CallbackQuery callbackQuery) {
        Long chatId = callbackQuery.getMessage().getChatId();
        int messageId = callbackQuery.getMessage().getMessageId();

        return new DeleteMessage(chatId.toString(), messageId);
    }
    public SendPhoto sendMessageAfterSearch(CallbackQuery callbackQuery) {
        Long chatId = callbackQuery.getMessage().getChatId();

        Movie movie = movieService.getById(Integer.valueOf(callbackQuery.getData()));
        InputFile inputFile = new InputFile(movie.getPostUrl());

        SendPhoto sendPhoto = new SendPhoto(chatId.toString(),inputFile);
        String slogan;
        if (movie.getSlogan() == null) {
            slogan = "";
        }else{
            slogan = movie.getSlogan();
        }
        String caption = movie.getTitle() + "\n\n" + slogan + "\n\n" + movie.getPlot();
        sendPhoto.setCaption(caption);
        sendPhoto.setReplyMarkup(setToDescription(movie));

        return sendPhoto;
    }
    public EditMessageReplyMarkup stages(Long chatId,Integer messageId,String inlineMessageId){
        EditMessageReplyMarkup editMessageReplyMarkup = new EditMessageReplyMarkup();
        editMessageReplyMarkup.setChatId(chatId.toString());
        editMessageReplyMarkup.setMessageId(messageId);
        editMessageReplyMarkup.setInlineMessageId(inlineMessageId);
        switch (i) {
            case 1 -> editMessageReplyMarkup.setReplyMarkup(genres());
            case 2 -> editMessageReplyMarkup.setReplyMarkup(genres2());
            case 3 -> editMessageReplyMarkup.setReplyMarkup(genres3());
            case 4 -> editMessageReplyMarkup.setReplyMarkup(genres4());
            case 5 -> editMessageReplyMarkup.setReplyMarkup(genres5());
        }
        return editMessageReplyMarkup;
    }
    public InlineKeyboardMarkup setToDescription(Movie movie) {
        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        List<InlineKeyboardButton> row = new ArrayList<>();
        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText("Watch");
        button.setUrl(movie.getUrl());
        row.add(button);
        rows.add(row);
        row = new ArrayList<>();
        InlineKeyboardButton button1 = new InlineKeyboardButton();
        button1.setText("Back");
        button1.setCallbackData("back"+movie.getId().toString());
        row.add(button1);
        rows.add(row);
        inlineKeyboardMarkup.setKeyboard(rows);
        return inlineKeyboardMarkup;
    }
    public SendMessage genresMessage(String chatId){
        SendMessage sendMessage = new SendMessage(chatId,"Genres:");
        sendMessage.setReplyMarkup(genres());
        return sendMessage;
    }


    public InlineKeyboardMarkup genres(){
        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        List<InlineKeyboardButton> row = new ArrayList<>();

        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText("–ê–Ω–∏–º–µ");
        button.setCallbackData("–∞–Ω–∏–º–µ");
        row.add(button);

        button = new InlineKeyboardButton();
        button.setText("–ë–∏–æ–≥—Ä–∞—Ñ–∏—è");
        button.setCallbackData("–±–∏–æ–≥—Ä–∞—Ñ–∏—è");
        row.add(button);

        button = new InlineKeyboardButton();
        button.setText("–ë–æ–µ–≤–∏–∫");
        button.setCallbackData("–±–æ–µ–≤–∏–∫");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–í–µ—Å—Ç–µ—Ä–Ω");
        button.setCallbackData("–≤–µ—Å—Ç–µ—Ä–Ω");
        row.add(button);

        button = new InlineKeyboardButton();
        button.setText("–í–æ–µ–Ω–Ω—ã–π");
        button.setCallbackData("–≤–æ–µ–Ω–Ω—ã–π");
        row.add(button);

        button = new InlineKeyboardButton();
        button.setText("–î–µ—Ç–µ–∫—Ç–∏–≤");
        button.setCallbackData("–¥–µ—Ç–µ–∫—Ç–∏–≤");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–î–µ—Ç—Å–∫–∏–π");
        button.setCallbackData("–¥–µ—Ç—Å–∫–∏–π");
        row.add(button);

        button = new InlineKeyboardButton();
        button.setText("–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π");
        button.setCallbackData("–¥–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π");
        row.add(button);

        button = new InlineKeyboardButton();
        button.setText("–î—Ä–∞–º–∞");
        button.setCallbackData("–¥—Ä–∞–º–∞");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–ò–≥—Ä–∞");
        button.setCallbackData("–∏–≥—Ä–∞");
        row.add(button);

        button = new InlineKeyboardButton();
        button.setText("–ò–≥—Ä–∞—Ñ–∏–ª—å–º");
        button.setCallbackData("–∏–≥—Ä–∞—Ñ–∏–ª—å–º");
        row.add(button);

        button = new InlineKeyboardButton();
        button.setText("–ò—Å—Å–∫—É—Å—Ç–≤–æ");
        button.setCallbackData("–∏—Å—Å–∫—É—Å—Ç–≤–æ");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–ò—Å—Ç–æ—Ä–∏—è");
        button.setCallbackData("–∏—Å—Ç–æ—Ä–∏—è");
        row.add(button);

        button = new InlineKeyboardButton();
        button.setText("–ö–∏–±–µ—Ä—Å–ø–æ—Ç—Ä");
        button.setCallbackData("–∫–∏–±–µ—Ä—Å–ø–æ—Ç—Ä");
        row.add(button);

        button = new InlineKeyboardButton();
        button.setText("–ö–æ–º–µ–¥–∏—è");
        button.setCallbackData("–∫–æ–º–µ–¥–∏—è");
        return getInlineKeyboardMarkup(inlineKeyboardMarkup, rows, row, button);
    }

    @NotNull
    private InlineKeyboardMarkup getInlineKeyboardMarkup(InlineKeyboardMarkup inlineKeyboardMarkup, List<List<InlineKeyboardButton>> rows, List<InlineKeyboardButton> row, InlineKeyboardButton button) {
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("<-");
        button.setCallbackData("back");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText(i + "/5");
        button.setCallbackData("hhh");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("->");
        button.setCallbackData("next");
        row.add(button);
        rows.add(row);
        inlineKeyboardMarkup.setKeyboard(rows);
        return inlineKeyboardMarkup;
    }

    public InlineKeyboardMarkup genres4(){
        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        List<InlineKeyboardButton> row = new ArrayList<>();

        InlineKeyboardButton button = new InlineKeyboardButton();

        button.setText("–§—ç–Ω—Ç–µ–∑–∏");
        button.setCallbackData("–§—ç–Ω—Ç–µ–∑–∏");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–¶–µ—Ä–µ–º–æ–Ω–∏—è");
        button.setCallbackData("–¶–µ—Ä–µ–º–æ–Ω–∏—è");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–≠–∫—à–µ–Ω");
        button.setCallbackData("–≠–∫—à–µ–Ω");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–Æ–º–æ—Ä");
        button.setCallbackData("–Æ–º–æ—Ä");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–°–∫–µ—Ç—á-—à–æ—É");
        button.setCallbackData("–°–∫–µ—Ç—á-—à–æ—É");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–û—Ç–æ—á–æ—Å—Ç–≤–µ–Ω–Ω—ã–π");
        button.setCallbackData("–û—Ç–æ—á–æ—Å—Ç–≤–µ–Ω–Ω—ã–π");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π");
        button.setCallbackData("–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–°–µ–º–µ–π–Ω—ã–π");
        button.setCallbackData("–°–µ–º–µ–π–Ω—ã–π");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ö—É–ª—å—Ç—É—Ä–∞");
        button.setCallbackData("–ö—É–ª—å—Ç—É—Ä–∞");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–≠–∫–æ–Ω–æ–º–∏–∫–∞");
        button.setCallbackData("–≠–∫–æ–Ω–æ–º–∏–∫–∞");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–°–æ—Ü–∏–æ–ª–æ–≥–∏—è");
        button.setCallbackData("–°–æ—Ü–∏–æ–ª–æ–≥–∏—è");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ü–æ–ª–∏—Ç–∏–∫–∞");
        button.setCallbackData("–ü–æ–ª–∏—Ç–∏–∫–∞");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–≠–∫—Ä–∞–Ω–∏–∑–∞—Ü–∏—è");
        button.setCallbackData("–≠–∫—Ä–∞–Ω–∏–∑–∞—Ü–∏—è");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–º—É–∑—ã–∫–∞–ª—å–Ω—ã–π");
        button.setCallbackData("–º—É–∑—ã–∫–∞–ª—å–Ω—ã–π");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–º–µ–¥–∏—Ü–∏–Ω–∞");
        button.setCallbackData("–º–µ–¥–∏—Ü–∏–Ω–∞");
        return getInlineKeyboardMarkup(inlineKeyboardMarkup, rows, row, button);

    }
    public InlineKeyboardMarkup genres2(){
        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        List<InlineKeyboardButton> row = new ArrayList<>();

        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText("–ö–æ–Ω—Ü–µ—Ä—Ç");
        button.setCallbackData("–∫–æ–Ω—Ü–µ—Ä—Ç");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ö–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–∫–∞");
        button.setCallbackData("–∫–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–∫–∞");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ö—Ä–∏–º–∏–Ω–∞–ª");
        button.setCallbackData("–∫—Ä–∏–º–∏–Ω–∞–ª");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–ö—É–ª–∏–Ω–∞—Ä–Ω–æ–µ —à–æ—É");
        button.setCallbackData("–∫—É–ª–∏–Ω–∞—Ä–Ω–æ–µ —à–æ—É");
        row.add(button);

        button = new InlineKeyboardButton();
        button.setText("–ú–µ–ª–æ–¥—Ä–∞–º–º–∞");
        button.setCallbackData("–º–µ–ª–æ–¥—Ä–∞–º–º–∞");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ú–∏—Å—Ç–∏–∫–∞");
        button.setCallbackData("–º–∏—Å—Ç–∏–∫–∞");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–ú—É–∑—ã–∫–∞");
        button.setCallbackData("–º—É–∑—ã–∫–∞");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ú—É–ª—å—Ç—Ñ–∏–ª—å–º");
        button.setCallbackData("–º—É–ª—å—Ç—Ñ–∏–ª—å–º");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ú—é–∑–∏–∫–ª");
        button.setCallbackData("–º—é–∑–∏–∫–ª");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();
        button = new InlineKeyboardButton();
        button.setText("–ù–∞—É—á–Ω–æ-–ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω—ã–π");
        button.setCallbackData("–Ω–∞—É—á–Ω–æ-–ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω—ã–π");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ù–∞—É—á–Ω–æ-–ø–æ–ø—É–ª—è—Ä–Ω—ã–π");
        button.setCallbackData("–Ω–∞—É—á–Ω–æ-–ø–æ–ø—É–ª—è—Ä–Ω—ã–π");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–û–±–∑–æ—Ä");
        button.setCallbackData("–æ–±–∑–æ—Ä");

        rows.add(row);
        row = new ArrayList<>();

        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–û–±—É—á–∞—é—â–µ–µ –≤–∏–¥–µ–æ");
        button.setCallbackData("–æ–±—É—á–∞—é—â–µ–µ –≤–∏–¥–µ–æ");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ü–æ—Ä–æ–¥–∏—è");
        button.setCallbackData("–ø–æ—Ä–æ–¥–∏—è");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ü–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω—ã–π");
        button.setCallbackData("–ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω—ã–π");
        return getInlineKeyboardMarkup(inlineKeyboardMarkup, rows, row, button);
    }
    public InlineKeyboardMarkup genres3(){
        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        List<InlineKeyboardButton> row = new ArrayList<>();

        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText("–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è");
        button.setCallbackData("–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ü—Ä–∏—Ä–æ–¥–∞");
        button.setCallbackData("–ø—Ä–∏—Ä–æ–¥–∞");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ —à–æ—É");
        button.setCallbackData("—Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ —à–æ—É");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();
        button = new InlineKeyboardButton();
        button.setText("–†–µ–∞–ª–∏—Ç–∏ –®–æ—É");
        button.setCallbackData("—Ä–µ–∞–ª–∏—Ç–∏ –®–æ—É");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–†–µ–∞–ª—å–Ω–æ–µ –¢–≤");
        button.setCallbackData("—Ä–µ–∞–ª—å–Ω–æ–µ –¢–≤");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–†–æ–º–∞–Ω—Ç–∏–∫–∞");
        button.setCallbackData("—Ä–æ–º–∞–Ω—Ç–∏–∫–∞");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();
        button = new InlineKeyboardButton();
        button.setText("–°–µ–º–µ–π–Ω—ã–π");
        button.setCallbackData("—Å–µ–º–µ–π–Ω—ã–π");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–°–ø–æ—Ä—Ç");
        button.setCallbackData("—Å–ø–æ—Ä—Ç");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–¢–í-—à–æ—É");
        button.setCallbackData("—Ç–≤-—à–æ—É");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();
        button = new InlineKeyboardButton();
        button.setText("–¢–µ–ª–µ–ø–µ—Ä–µ–¥–∞—á–∞");
        button.setCallbackData("—Ç–µ–ª–µ–ø–µ—Ä–µ–¥–∞—á–∞");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–¢–æ–∫-—à–æ—É");
        button.setCallbackData("—Ç–æ–∫-—à–æ—É");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–¢—Ä–∏–ª–ª–µ—Ä");
        button.setCallbackData("—Ç—Ä–∏–ª–ª–µ—Ä");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();
        button = new InlineKeyboardButton();
        button.setText("–£–∂–∞—Å—ã");
        button.setCallbackData("—É–∂–∞—Å—ã");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞");
        button.setCallbackData("—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–§–∏–ª—å–º–Ω—É–∞—Ä");
        button.setCallbackData("—Ñ–∏–ª—å–º–Ω—É–∞—Ä");
        return getInlineKeyboardMarkup(inlineKeyboardMarkup, rows, row, button);
    }
    public InlineKeyboardMarkup genres5(){
        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        List<InlineKeyboardButton> row = new ArrayList<>();

        InlineKeyboardButton button = new InlineKeyboardButton();
        button = new InlineKeyboardButton();
        button.setText("–∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞");
        button.setCallbackData("–∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–π");
        button.setCallbackData("–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–π");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–û–±—É—á–∞—é—â–∏–π");
        button.setCallbackData("–û–±—É—á–∞—é—â–∏–π");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("—Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ");
        button.setCallbackData("—Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ö–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–Ω—ã–π");
        button.setCallbackData("–ö–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–Ω—ã–π");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ö–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–Ω—ã–π —Ñ–∏–ª—å–º");
        button.setCallbackData("–ö–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–Ω—ã–π —Ñ–∏–ª—å–º");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–°–µ—Ä–∏–∞–ª");
        button.setCallbackData("–°–µ—Ä–∏–∞–ª");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–∫–æ–º–µ–¥–∏");
        button.setCallbackData("–∫–æ–º–µ–¥–∏");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–Ω–∞—É–∫–∞");
        button.setCallbackData("–Ω–∞—É–∫–∞");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–Ω–æ–≤–æ—Å—Ç–∏");
        button.setCallbackData("–Ω–æ–≤–æ—Å—Ç–∏");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–î–∞–Ω–∏—è");
        button.setCallbackData("–î–∞–Ω–∏—è");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–®–≤–µ—Ü–∏—è");
        button.setCallbackData("–®–≤–µ—Ü–∏—è");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ");
        button.setCallbackData("–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã");
        button.setCallbackData("–ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ù–æ—Ä–≤–µ–≥–∏—è");
        button.setCallbackData("–ù–æ—Ä–≤–µ–≥–∏—è");
        row.add(button);

        rows.add(row);
        row = new ArrayList<>();

        button = new InlineKeyboardButton();
        button.setText("–ö–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–Ω—ã–µ —Ñ–∏–ª—å–º");
        button.setCallbackData("–ö–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–Ω—ã–µ —Ñ–∏–ª—å–º");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–°–®–ê");
        button.setCallbackData("–°–®–ê");
        row.add(button);
        button = new InlineKeyboardButton();
        button.setText("–ü–æ–ª—å—à–∞");
        button.setCallbackData("–ü–æ–ª—å—à–∞");
        return getInlineKeyboardMarkup(inlineKeyboardMarkup, rows, row, button);
    }
}





